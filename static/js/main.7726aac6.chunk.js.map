{"version":3,"sources":["reportWebVitals.js","chart/chart.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Chart","props","getRate","a","axios","get","res","data","catch","err","console","log","BTC_CAD","ETH_CAD","setState","rateBtc","rateEth","getUiData","reverse","nomalizedData","reduce","acc","s","amountBTC","amountETH","amountCAD","length","type","from","currency","amount","to","direction","push","createdAt","state","extractDataToList","arg","i","item","toString","slice","unshift","componentDidMount","document","title","graph","tooltip","trigger","axisPointer","label","backgroundColor","legend","dataZoom","height","bottom","borderColor","handleSize","handleStyle","shadowBlur","shadowOffsetX","shadowOffsetY","shadowColor","grid","left","right","containLabel","xAxis","this","show","axisLabel","color","fontWeight","rotate","interval","yAxis","inside","series","name","smooth","symbol","className","style","width","option","Component","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.7726aac6.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React, { Component } from \"react\";\r\nimport \"./style.css\";\r\n//import echarts from \"echarts\";\r\nimport ReactEcharts from \"echarts-for-react\";\r\nimport axios from \"axios\";\r\n\r\nclass Chart extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      data: {},\r\n      graph: [],\r\n      rateBtc: 0,\r\n      rateEth: 0\r\n    };\r\n    this.getRate();\r\n    this.getUiData();\r\n  }\r\n\r\n  getRate = async () => {\r\n    const api = \"https://api.shakepay.co/rates\"\r\n    const data = await axios\r\n      .get(api)\r\n      .then((res) => {\r\n        return res.data;\r\n      })\r\n      .catch((err) => {\r\n          console.log(err)\r\n          return {BTC_CAD:76260.2, ETH_CAD:5374.03}\r\n      });\r\n    this.setState({ rateBtc: data[\"BTC_CAD\"] });\r\n    this.setState({ rateEth: data[\"ETH_CAD\"] });\r\n    return data;\r\n  }\r\n\r\n  getUiData = async () => {\r\n    const api = \"https://shakepay.github.io/programming-exercise/web/transaction_history.json\"\r\n    const data = await axios\r\n      .get(api)\r\n      .then((res) => {\r\n        return res.data.reverse();\r\n      })\r\n      .catch((err) => console.log(err));\r\n    // normalize data\r\n    const nomalizedData = data.reduce((acc, s) => {\r\n        let amountBTC = 0.0\r\n        let amountETH = 0.0\r\n        let amountCAD = 0.0\r\n        if (acc.length>0) {\r\n            amountBTC = acc[acc.length-1][\"amountBTC\"]\r\n            amountETH = acc[acc.length-1][\"amountETH\"]\r\n            amountCAD = acc[acc.length-1][\"amountCAD\"]\r\n        }\r\n        switch (s.type) {\r\n            case \"conversion\":\r\n                switch (s.from.currency) {\r\n                    case \"BTC\":\r\n                        amountBTC -= s.from.amount\r\n                        break\r\n                    case \"ETH\":\r\n                        amountETH -= s.from.amount\r\n                        break\r\n                    case \"CAD\":\r\n                        amountCAD -= s.from.amount\r\n                        break\r\n                    default:\r\n                        console.log(s.from.currency)\r\n                }\r\n                switch (s.to.currency) {\r\n                    case \"BTC\":\r\n                        amountBTC += s.to.amount\r\n                        break\r\n                    case \"ETH\":\r\n                        amountETH += s.to.amount\r\n                        break\r\n                    case \"CAD\":\r\n                        amountCAD += s.to.amount\r\n                        break\r\n                        default:\r\n                            console.log(s.to.currency)\r\n                }\r\n                break\r\n            default:\r\n                if (s.direction === \"credit\") {\r\n                    switch (s.currency) {\r\n                        case \"BTC\":\r\n                            amountBTC += s.amount\r\n                            break\r\n                        case \"ETH\":\r\n                            amountETH += s.amount\r\n                            break\r\n                        case \"CAD\":\r\n                            amountCAD += s.amount\r\n                            break\r\n                        default:\r\n                            console.log(s.direction)\r\n                    }\r\n                } else {\r\n                    switch (s.currency) {\r\n                        case \"BTC\":\r\n                            amountBTC -= s.amount\r\n                            break\r\n                        case \"ETH\":\r\n                            amountETH -= s.amount\r\n                            break\r\n                        case \"CAD\":\r\n                            amountCAD -= s.amount\r\n                            break\r\n                        default:\r\n                            console.log(s.direction)\r\n                    }\r\n                }\r\n        }\r\n        acc.push({\r\n            createdAt: s.createdAt,\r\n            amount: amountBTC * this.state.rateBtc + amountETH * this.state.rateEth + amountCAD,\r\n            amountBTC,\r\n            amountETH,\r\n            amountCAD\r\n        })\r\n        return acc\r\n    }, [])\r\n\r\n    this.setState({ data: nomalizedData });\r\n    return nomalizedData;\r\n  };\r\n\r\n  extractDataToList = (arg) => {\r\n    const data = this.state.data;\r\n    const res = [];\r\n    for (let i in data) {\r\n      let item = data[i][arg];\r\n      if (arg === \"createdAt\") {\r\n        let i =\r\n          item.toString().slice(0, 4) +\r\n          \"-\" +\r\n          item.toString().slice(5, 7) +\r\n          \"-\" +\r\n          item.toString().slice(8, 10);\r\n        res.unshift(i);\r\n      } else {\r\n        res.unshift(data[i][arg]);\r\n      }\r\n    }\r\n    return res.reverse();\r\n  };\r\n\r\n  componentDidMount = () => {\r\n    document.title = \"Covid USA\";\r\n  };\r\n\r\n  render() {\r\n    const dates = this.extractDataToList(\"createdAt\");\r\n    const netWorth = this.extractDataToList(\"amount\");\r\n\r\n    const data = {\r\n      tooltip: {\r\n        trigger: \"net worth\",\r\n        axisPointer: {\r\n          label: {\r\n            backgroundColor: \"#6a7985\"\r\n          }\r\n        }\r\n      },\r\n      legend: {\r\n        data: [\"NetWorth\"]\r\n      },\r\n      dataZoom: [\r\n        {\r\n          type: \"slider\",\r\n          height: 8,\r\n          bottom: 20,\r\n          borderColor: \"transparent\",\r\n          backgroundColor: \"#e2e2e2\",\r\n        //   handleIcon:\r\n        //     \"M10.7,11.9H9.3c-4.9,0.3-8.8,4.4-8.8,9.4c0,5,3.9,9.1,8.8,9.4h1.3c4.9-0.3,8.8-4.4,8.8-9.4C19.5,16.3,15.6,12.2,10.7,11.9z M13.3,24.4H6.7v-1.2h6.6z M13.3,22H6.7v-1.2h6.6z M13.3,19.6H6.7v-1.2h6.6z\", // jshint ignore:line\r\n          handleSize: 20,\r\n          handleStyle: {\r\n            shadowBlur: 6,\r\n            shadowOffsetX: 1,\r\n            shadowOffsetY: 2,\r\n            shadowColor: \"#aaa\"\r\n          }\r\n        },\r\n        {\r\n          type: \"inside\"\r\n        }\r\n      ],\r\n      grid: {\r\n        left: \"3%\",\r\n        right: \"4%\",\r\n        bottom: \"3%\",\r\n        containLabel: true\r\n      },\r\n      xAxis: {\r\n        type: \"category\",\r\n        data: dates,\r\n        show: true,\r\n        axisLabel: {\r\n          color: \"gray\",\r\n          fontWeight: \"bold\",\r\n          rotate: 90,\r\n          interval: 6\r\n        }\r\n      },\r\n      yAxis: {\r\n        type: \"value\",\r\n        axisLabel: {\r\n          color: \"gray\",\r\n          inside: true\r\n        }\r\n      },\r\n      series: [\r\n        {\r\n          name: \"Infected\",\r\n          type: \"bar\",\r\n          smooth: true,\r\n          data: netWorth,\r\n          symbol: \"none\",\r\n          color: \"#0000ff\"\r\n        }\r\n      ]\r\n    };\r\n    return (\r\n      <div className=\"App\">\r\n        <h2>Net worth(Canadien dollar)</h2>\r\n        <ReactEcharts\r\n          style={{\r\n            height: \"600px\",\r\n            width: \"100%\"\r\n          }}\r\n          option={data}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Chart;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport Chart from './chart/chart';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Chart />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();"],"sourceRoot":""}